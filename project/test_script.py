import unittest
from script import convert_dna_to_rna, convert_rna_to_protein, gc_content_subseq
from os.path import exists

'''
This is a script for testing the functions of script.py built in Part 1 and Part3 of qpa
final project. Testing is done using unittest module.
The file is located in the same folder as script.py, to avoid Import Errors and appending sys.path.  
'''


class testScript(unittest.TestCase):

    def test_convert_dna_to_rna(self):
        '''This is a test for DNA to RNA convertion'''
        self.assertEqual(convert_dna_to_rna("ATTTGGCTACTAACAATCTA"), "AUUUGGCUACUAACAAUCUA")
        self.assertEqual(convert_dna_to_rna("GTTGTAATGGCCTACATTA"), "GUUGUAAUGGCCUACAUUA")
        self.assertEqual(convert_dna_to_rna("CAGGTGGTGTTGTTCAGTT"), "CAGGUGGUGUUGUUCAGUU")
        self.assertEqual(convert_dna_to_rna("GCTAACTAAC"), "GCUAACUAAC")
        self.assertEqual(convert_dna_to_rna("GCTAACTAACATCTTTGGCACTGTT"), "GCUAACUAACAUCUUUGGCACUGUU")
        self.assertEqual(convert_dna_to_rna("TATGAAAAACTCAAA"), "UAUGAAAAACUCAAA")
        self.assertEqual(convert_dna_to_rna("CCCGTCCTTGATTGGCTTGAAGAGAAGTTT"), "CCCGUCCUUGAUUGGCUUGAAGAGAAGUUU")

    def test_convert_rna_to_protein(self):
        '''This is a test for DNA to RNA convertion'''
        self.assertEqual(convert_rna_to_protein("AUUUGGCUACUAACAAUCUA"), "IWLLTI")
        self.assertEqual(convert_rna_to_protein("GUUGUAAUGGCCUACAUUA"), "VVMAYI")
        self.assertEqual(convert_rna_to_protein("CAGGUGGUGUUGUUCAGUU"), "QVVLFS")
        self.assertEqual(convert_rna_to_protein("GCUAACUAAC"), "AN.")
        self.assertEqual(convert_rna_to_protein("GCUAACUAACAUCUUUGGCACUGUU"), "AN.HLWHC")
        self.assertEqual(convert_rna_to_protein("UAUGAAAAACUCAAA"), "YEKLK")
        self.assertEqual(convert_rna_to_protein("CCCGUCCUUGAUUGGCUUGAAGAGAAGUUU"), "PVLDWLEEKF")

    def test_gc_content_subseq(self):
        '''This is a test for GC content function input raising exception for wrong type'''
        self.assertRaises(Exception, gc_content_subseq, 12, 3)

    def test_gc_plot_exists(self):
        '''Testing if GC-content plot was generated by gc_content_subseq function'''
        path = "image/gc_dist.png"
        gc_content_subseq("ATTTGGCTACTAACAATCTA", 3)
        self.assertTrue(exists(path), "GC-content plot was not generated")


if __name__ == '__main__':
    unittest.main()
